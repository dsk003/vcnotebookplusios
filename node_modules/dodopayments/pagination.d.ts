import { AbstractPage, Response, APIClient, FinalRequestOptions, PageInfo } from "./core.js";
export interface DefaultPageNumberPaginationResponse<Item> {
    items: Array<Item>;
}
export interface DefaultPageNumberPaginationParams {
    page_number?: number;
    page_size?: number;
}
export declare class DefaultPageNumberPagination<Item> extends AbstractPage<Item> implements DefaultPageNumberPaginationResponse<Item> {
    items: Array<Item>;
    constructor(client: APIClient, response: Response, body: DefaultPageNumberPaginationResponse<Item>, options: FinalRequestOptions);
    getPaginatedItems(): Item[];
    nextPageParams(): Partial<DefaultPageNumberPaginationParams> | null;
    nextPageInfo(): PageInfo | null;
}
export interface CursorPagePaginationResponse<Item> {
    data: Array<Item>;
    iterator: string;
    done: boolean;
}
export interface CursorPagePaginationParams {
    iterator?: string;
    limit?: number;
}
export declare class CursorPagePagination<Item> extends AbstractPage<Item> implements CursorPagePaginationResponse<Item> {
    data: Array<Item>;
    iterator: string;
    done: boolean;
    constructor(client: APIClient, response: Response, body: CursorPagePaginationResponse<Item>, options: FinalRequestOptions);
    getPaginatedItems(): Item[];
    hasNextPage(): boolean;
    nextPageParams(): Partial<CursorPagePaginationParams> | null;
    nextPageInfo(): PageInfo | null;
}
//# sourceMappingURL=pagination.d.ts.map