import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
import * as WebhookEventsAPI from "../webhook-events.js";
import * as HeadersAPI from "./headers.js";
import { HeaderRetrieveResponse, HeaderUpdateParams, Headers } from "./headers.js";
import { CursorPagePagination, type CursorPagePaginationParams } from "../../pagination.js";
export declare class Webhooks extends APIResource {
    headers: HeadersAPI.Headers;
    /**
     * Create a new webhook
     */
    create(body: WebhookCreateParams, options?: Core.RequestOptions): Core.APIPromise<WebhookDetails>;
    /**
     * Get a webhook by id
     */
    retrieve(webhookId: string, options?: Core.RequestOptions): Core.APIPromise<WebhookDetails>;
    /**
     * Patch a webhook by id
     */
    update(webhookId: string, body: WebhookUpdateParams, options?: Core.RequestOptions): Core.APIPromise<WebhookDetails>;
    /**
     * List all webhooks
     */
    list(query?: WebhookListParams, options?: Core.RequestOptions): Core.PagePromise<WebhookDetailsCursorPagePagination, WebhookDetails>;
    list(options?: Core.RequestOptions): Core.PagePromise<WebhookDetailsCursorPagePagination, WebhookDetails>;
    /**
     * Delete a webhook by id
     */
    delete(webhookId: string, options?: Core.RequestOptions): Core.APIPromise<void>;
    /**
     * Get webhook secret by id
     */
    retrieveSecret(webhookId: string, options?: Core.RequestOptions): Core.APIPromise<WebhookRetrieveSecretResponse>;
}
export declare class WebhookDetailsCursorPagePagination extends CursorPagePagination<WebhookDetails> {
}
export interface WebhookDetails {
    /**
     * The webhook's ID.
     */
    id: string;
    /**
     * Created at timestamp
     */
    created_at: string;
    /**
     * An example webhook name.
     */
    description: string;
    /**
     * Metadata of the webhook
     */
    metadata: {
        [key: string]: string;
    };
    /**
     * Updated at timestamp
     */
    updated_at: string;
    /**
     * Url endpoint of the webhook
     */
    url: string;
    /**
     * Status of the webhook.
     *
     * If true, events are not sent
     */
    disabled?: boolean | null;
    /**
     * Filter events to the webhook.
     *
     * Webhook event will only be sent for events in the list.
     */
    filter_types?: Array<string> | null;
    /**
     * Configured rate limit
     */
    rate_limit?: number | null;
}
export interface WebhookRetrieveSecretResponse {
    secret: string;
}
export interface WebhookCreateParams {
    /**
     * Url of the webhook
     */
    url: string;
    description?: string | null;
    /**
     * Create the webhook in a disabled state.
     *
     * Default is false
     */
    disabled?: boolean | null;
    /**
     * Filter events to the webhook.
     *
     * Webhook event will only be sent for events in the list.
     */
    filter_types?: Array<WebhookEventsAPI.WebhookEventType>;
    /**
     * Custom headers to be passed
     */
    headers?: {
        [key: string]: string;
    } | null;
    /**
     * The request's idempotency key
     */
    idempotency_key?: string | null;
    /**
     * Metadata to be passed to the webhook Defaut is {}
     */
    metadata?: {
        [key: string]: string;
    } | null;
    rate_limit?: number | null;
}
export interface WebhookUpdateParams {
    /**
     * Description of the webhook
     */
    description?: string | null;
    /**
     * To Disable the endpoint, set it to true.
     */
    disabled?: boolean | null;
    /**
     * Filter events to the endpoint.
     *
     * Webhook event will only be sent for events in the list.
     */
    filter_types?: Array<WebhookEventsAPI.WebhookEventType> | null;
    /**
     * Metadata
     */
    metadata?: {
        [key: string]: string;
    } | null;
    /**
     * Rate limit
     */
    rate_limit?: number | null;
    /**
     * Url endpoint
     */
    url?: string | null;
}
export interface WebhookListParams extends CursorPagePaginationParams {
}
export declare namespace Webhooks {
    export { type WebhookDetails as WebhookDetails, type WebhookRetrieveSecretResponse as WebhookRetrieveSecretResponse, WebhookDetailsCursorPagePagination as WebhookDetailsCursorPagePagination, type WebhookCreateParams as WebhookCreateParams, type WebhookUpdateParams as WebhookUpdateParams, type WebhookListParams as WebhookListParams, };
    export { Headers as Headers, type HeaderRetrieveResponse as HeaderRetrieveResponse, type HeaderUpdateParams as HeaderUpdateParams, };
}
//# sourceMappingURL=webhooks.d.ts.map